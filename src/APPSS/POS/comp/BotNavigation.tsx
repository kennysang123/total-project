import React, { useContext } from "react";
import Box from "@mui/material/Box";
import CssBaseline from "@mui/material/CssBaseline";
import BottomNavigation from "@mui/material/BottomNavigation";
import BottomNavigationAction from "@mui/material/BottomNavigationAction";
import RestoreIcon from "@mui/icons-material/Restore";
import FavoriteIcon from "@mui/icons-material/Favorite";
import ArchiveIcon from "@mui/icons-material/Archive";
import Paper from "@mui/material/Paper";
import List from "@mui/material/List";
import ListItem from "@mui/material/ListItem";
import ListItemAvatar from "@mui/material/ListItemAvatar";
import ListItemText from "@mui/material/ListItemText";
import Avatar from "@mui/material/Avatar";
import MenuIcon from "@mui/icons-material/Menu";
import FilterAltIcon from "@mui/icons-material/FilterAlt";
import CampaignIcon from "@mui/icons-material/Campaign";
import { AppContext } from "../Context/AppContext";
import { Divider, Typography, Stack, Button } from "@mui/material";
import FemaleIcon from "@mui/icons-material/Female";
import MaleIcon from "@mui/icons-material/Male";
import VerifiedUserIcon from "@mui/icons-material/VerifiedUser";
import VerifiedIcon from "@mui/icons-material/Verified";
import { globalCSS } from "./GlobalStyle";

/* function refreshMessages(): MessageExample[] {
  const getRandomInt = (max: number) =>
    Math.floor(Math.random() * Math.floor(max));

  return Array.from(new Array(50)).map(
    () => messageExamples[getRandomInt(messageExamples.length)]
  );
} */
export default function BotNavigation() {
  const [value, setValue] = React.useState(0);
  const ref = React.useRef<HTMLDivElement>(null);

  const {
    setOpenDrawerGioiThieu,
    setIsOpenDrawerFilter,
    setIsOpenDrawerMenu,
    searchValue,
    setSearchValue,
    setOpenDrawerMenuGioiThieu,
  } = useContext(AppContext);

  const sizePhoto = 70;
  return (
    <Box sx={{ pb: 7 }} ref={ref}>
      <CssBaseline />

      <Paper
        sx={{
          position: "fixed",
          bottom: 0,
          left: 0,
          right: 0,
        }}
        elevation={3}
        color="primary"
      >
        {/* <Stack>
          {searchValue !== "" && (
            <Button
              sx={{ borderRadius: "0px" }}
              variant="contained"
              size="large"
              color={"error"}
              fullWidth
              onClick={() => setSearchValue("")}
            >
              Xóa tìm kiếm
            </Button>
          )}
        </Stack> */}
        <BottomNavigation
          showLabels
          value={value}
          onChange={(event, newValue) => {
            setValue(newValue);
          }}
        >
          <BottomNavigationAction
            label="Giới thiệu"
            icon={<CampaignIcon />}
            onClick={() => setOpenDrawerMenuGioiThieu(true)}
          />
          {/* <BottomNavigationAction label="Yêu thích" icon={<FavoriteIcon />} /> */}
          <BottomNavigationAction
            label="Lọc"
            icon={<FilterAltIcon />}
            onClick={() => setIsOpenDrawerFilter(true)}
          />
          <BottomNavigationAction
            label="Menu"
            icon={<MenuIcon />}
            onClick={() => setIsOpenDrawerMenu(true)}
          />
        </BottomNavigation>
      </Paper>
    </Box>
  );
}

interface MessageExample {
  primary: string;
  secondary: string;
  person: string;
}

const messageExamples: readonly MessageExample[] = [
  {
    primary: "Lê Thị Thơm",
    secondary:
      "I'll be in the neighbourhood this week. Let's grab a bite to eat",
    person: "https://i.pravatar.cc/",
  },
  {
    primary: "Birthday Gift",
    secondary: `Do you have a suggestion for a good present for John on his work
      anniversary. I am really confused & would love your thoughts on it.`,
    person: "https://i.pravatar.cc/",
  },
  {
    primary: "Recipe to try",
    secondary:
      "I am try out this new BBQ recipe, I think this might be amazing",
    person: "https://i.pravatar.cc/",
  },
  {
    primary: "Yes!",
    secondary: "I have the tickets to the ReactConf for this year.",
    person: "https://i.pravatar.cc/",
  },
  {
    primary: "Doctor's Appointment",
    secondary:
      "My appointment for the doctor was rescheduled for next Saturday.",
    person: "https://i.pravatar.cc/",
  },
  {
    primary: "Discussion",
    secondary: `Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.`,
    person: "https://i.pravatar.cc/",
  },
  {
    primary: "Summer BBQ",
    secondary: `Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.`,
    person: "https://i.pravatar.cc/",
  },
];
